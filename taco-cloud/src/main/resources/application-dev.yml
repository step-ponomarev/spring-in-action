spring:
  application:
    name: taco-cloud
  thymeleaf:
    cache: false

  artemis:
    broker-url: tcp://localhost:61616
    user: artemis
    password: artemis

#  kafka:
#    consumer:
#      group-id: taco.group
#      group-instance-id: taco-instance
#      enable-auto-commit: true
#      auto-offset-reset: earliest
#    bootstrap-servers:
#      - localhost:9092

  datasource:
    generate-unique-name: false
    name: tacocloud
    username: stepan
    password: 1234
    url: jdbc:h2:mem:tacocloud

  data:
    jdbc:
      dialect: h2
    rest:
      base-path: /api
#  security:
#    oauth2:
#      client:
#        registration:
#          taco-admin-client:
#            provider: tacocloud
#            client-id: taco-admin-client
#            client-secret: secret
#            authorization-grant-type: authorization_code
#            redirect-uri: "http://127.0.0.1:9090/login/oauth2/code/taco-admin-client"
#            scope:
#              - writeIngredients
#              - deleteIngredients
#              - writeOrder
#              - readOrder
#              - openid
#        provider:
#          tacocloud:
#            issuer-uri: http://127.0.0.1:9000
#      resourceserver:
#        jwt:
#          jwk-set-uri: http://127.0.0.1:9000/oauth2/jwks

tacocloud:
  email:
    host: imap.tacocloud.com
    mailbox: INBOX
    username: taco-in-flow
    password: 1L0v3T4c0s
    poll-rate: 10000

taco:
  props:
    orderPageSize: 20
    tacoPageSize: 20

# https://github.com/step-ponomarev/tacos-authorization/pull/1 - сервер авторизации
security:
  props:
    ignore-csrf-url-patterns: /**